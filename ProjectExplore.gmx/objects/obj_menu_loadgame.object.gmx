<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sprite_id = sprite_add("spr_main_menu_controls.png",0,false,false,0,24);

m_control = true;
m_index = 0;

if ( os_type == os_windows )
{
global.game_load_id = 1;

list_index = 0;

file_list = ds_list_create();
i = 0;
first_file_name = file_find_first(working_directory+"*.sav",0);
if ( file_exists(first_file_name) == true )
{
ds_list_add(file_list,first_file_name);
for(i=0;i&lt;2;i++)
{
    file_name = file_find_next();
    if ( file_name != first_file_name &amp;&amp; file_name != "" &amp;&amp; ds_list_find_index(file_list,file_name) == -1 )
    {
    ds_list_add(file_list,string(file_name));
    i--;
    }
    else
    {
    i = 0;
    break;
    }
}
}
file_find_close();

ini_open("save_index.ini");
m_str[0] = "Back";

m_str[1] = "";
m_str[2] = "";
m_str[3] = "";
m_str[4] = "";
m_str[5] = "";
m_str[6] = "";
m_str[7] = "";
m_str[8] = "";
m_str[9] = "";
m_str[10] = "";
ini_close();

if ( list_index+1 &lt;= ds_list_size(file_list) )
{
m_str[1] = ds_list_find_value(file_list,list_index);
}
if ( list_index+2 &lt;= ds_list_size(file_list) )
{
m_str[2] = ds_list_find_value(file_list,list_index+1);
}
if ( list_index+3 &lt;= ds_list_size(file_list) )
{
m_str[3] = ds_list_find_value(file_list,list_index+2);
}
if ( list_index+4 &lt;= ds_list_size(file_list) )
{
m_str[4] = ds_list_find_value(file_list,list_index+3);
}
if ( list_index+5 &lt;= ds_list_size(file_list) )
{
m_str[5] = ds_list_find_value(file_list,list_index+4);
}
if ( list_index+6 &lt;= ds_list_size(file_list) )
{
m_str[6] = ds_list_find_value(file_list,list_index+5);
}
if ( list_index+7 &lt;= ds_list_size(file_list) )
{
m_str[7] = ds_list_find_value(file_list,list_index+6);
}
if ( list_index+8 &lt;= ds_list_size(file_list) )
{
m_str[8] = ds_list_find_value(file_list,list_index+7);
}
if ( list_index+9 &lt;= ds_list_size(file_list) )
{
m_str[9] = ds_list_find_value(file_list,list_index+8);
}
if ( list_index+10 &lt;= ds_list_size(file_list) )
{
m_str[10] = ds_list_find_value(file_list,list_index+9);
}
}
else
{
ini_open("save_index.ini");
m_str[0] = "Back";
m_str[1] = ini_read_string("data","save1","");
m_str[2] = ini_read_string("data","save2","");
m_str[3] = ini_read_string("data","save3","");
m_str[4] = ini_read_string("data","save4","");
m_str[5] = ini_read_string("data","save5","");
m_str[6] = ini_read_string("data","save6","");
m_str[7] = ini_read_string("data","save7","");
m_str[8] = ini_read_string("data","save8","");
m_str[9] = ini_read_string("data","save9","");
ini_close();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Check For Menu Movement
if ( m_control == true &amp;&amp; os_type == os_windows )
{
if ( mouse_wheel_down() )
{
if ( list_index+10 &lt;= ds_list_size(file_list) )
{
list_index ++;
m_str[1] = "";
m_str[2] = "";
m_str[3] = "";
m_str[4] = "";
m_str[5] = "";
m_str[6] = "";
m_str[7] = "";
m_str[8] = "";
m_str[9] = "";
m_str[10] = "";
m_str[1] = ds_list_find_value(file_list,list_index);
m_str[2] = ds_list_find_value(file_list,list_index+1);
m_str[3] = ds_list_find_value(file_list,list_index+2);
m_str[4] = ds_list_find_value(file_list,list_index+3);
m_str[5] = ds_list_find_value(file_list,list_index+4);
m_str[6] = ds_list_find_value(file_list,list_index+5);
m_str[7] = ds_list_find_value(file_list,list_index+6);
m_str[8] = ds_list_find_value(file_list,list_index+7);
m_str[9] = ds_list_find_value(file_list,list_index+8);
m_str[10] = ds_list_find_value(file_list,list_index+9);
}
}

if ( mouse_wheel_up() )
{
if ( list_index-1 &gt;= 0 )
{
list_index --;
m_str[1] = "";
m_str[2] = "";
m_str[3] = "";
m_str[4] = "";
m_str[5] = "";
m_str[6] = "";
m_str[7] = "";
m_str[8] = "";
m_str[9] = "";
m_str[10] = "";
m_str[1] = ds_list_find_value(file_list,list_index);
m_str[2] = ds_list_find_value(file_list,list_index+1);
m_str[3] = ds_list_find_value(file_list,list_index+2);
m_str[4] = ds_list_find_value(file_list,list_index+3);
m_str[5] = ds_list_find_value(file_list,list_index+4);
m_str[6] = ds_list_find_value(file_list,list_index+5);
m_str[7] = ds_list_find_value(file_list,list_index+6);
m_str[8] = ds_list_find_value(file_list,list_index+7);
m_str[9] = ds_list_find_value(file_list,list_index+8);
m_str[10] = ds_list_find_value(file_list,list_index+9);
}
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Check For Mouse Input
/*
if ( m_control == true )
{
m_index = -1;
draw_set_font(font_gulim_28);
// button 0
if ( mouse_x &gt; x+28 &amp;&amp; mouse_x &lt; x+160+string_width(m_str[0]) )
{
    if ( mouse_y &gt; y+48-(string_height(m_str[0])/2) &amp;&amp; mouse_y &lt; y+48+(string_height(m_str[0])/2) )
    {
        m_index = 0;
        if ( mouse_check_button_pressed(mb_left) == true )
        {scr_loadgame_menu(m_index);exit;}
    }
}

// button 1
if ( mouse_x &gt; x+28 &amp;&amp; mouse_x &lt; x+160+string_width(m_str[1]) )
{
    if ( mouse_y &gt; y+98-(string_height(m_str[1])/2) &amp;&amp; mouse_y &lt; y+98+(string_height(m_str[1])/2) )
    {
        m_index = 1;
        if ( mouse_check_button_pressed(mb_left) == true )
        {scr_loadgame_menu(m_index);exit;}
        if ( mouse_check_button_pressed(mb_right) == true &amp;&amp; m_str[1] != "" )
        {global.world_name = m_str[1];instance_create(640,360,obj_prompt_delete);exit;}
    }
}

// button 2
if ( mouse_x &gt; x+28 &amp;&amp; mouse_x &lt; x+160+string_width(m_str[1]) )
{
    if ( mouse_y &gt; y+148-(string_height(m_str[2])/2) &amp;&amp; mouse_y &lt; y+148+(string_height(m_str[2])/2) )
    {
        m_index = 2;
        if ( mouse_check_button_pressed(mb_left) == true )
        {scr_loadgame_menu(m_index);exit;}
        if ( mouse_check_button_pressed(mb_right) == true &amp;&amp; m_str[2] != "" )
        {global.world_name = m_str[2];instance_create(640,360,obj_prompt_delete);exit;}
    }
}

// button 3
if ( mouse_x &gt; x+28 &amp;&amp; mouse_x &lt; x+160+string_width(m_str[1]) )
{
    if ( mouse_y &gt; y+198-(string_height(m_str[3])/2) &amp;&amp; mouse_y &lt; y+198+(string_height(m_str[3])/2) )
    {
        m_index = 3;
        if ( mouse_check_button_pressed(mb_left) == true )
        {scr_loadgame_menu(m_index);exit;}
        if ( mouse_check_button_pressed(mb_right) == true &amp;&amp; m_str[3] != "" )
        {global.world_name = m_str[3];instance_create(640,360,obj_prompt_delete);exit;}
    }
}
    
// button 4
if ( mouse_x &gt; x+28 &amp;&amp; mouse_x &lt; x+160+string_width(m_str[1]) )
{
    if ( mouse_y &gt; y+248-(string_height(m_str[4])/2) &amp;&amp; mouse_y &lt; y+248+(string_height(m_str[4])/2) )
    {
        m_index = 4;
        if ( mouse_check_button_pressed(mb_left) == true )
        {scr_loadgame_menu(m_index);exit;}
        if ( mouse_check_button_pressed(mb_right) == true &amp;&amp; m_str[4] != "" )
        {global.world_name = m_str[4];instance_create(640,360,obj_prompt_delete);exit;}
    }
}
    
// button 5
if ( mouse_x &gt; x+28 &amp;&amp; mouse_x &lt; x+160+string_width(m_str[1]) )
{
    if ( mouse_y &gt; y+298-(string_height(m_str[5])/2) &amp;&amp; mouse_y &lt; y+298+(string_height(m_str[5])/2) )
    {
        m_index = 5;
        if ( mouse_check_button_pressed(mb_left) == true )
        {scr_loadgame_menu(m_index);exit;}
        if ( mouse_check_button_pressed(mb_right) == true &amp;&amp; m_str[5] != "" )
        {global.world_name = m_str[5];instance_create(640,360,obj_prompt_delete);exit;}
    }
}

// button 6
if ( mouse_x &gt; x+28 &amp;&amp; mouse_x &lt; x+160+string_width(m_str[6]) )
{
    if ( mouse_y &gt; y+348-(string_height(m_str[6])/2) &amp;&amp; mouse_y &lt; y+348+(string_height(m_str[6])/2) )
    {
        m_index = 6;
        if ( mouse_check_button_pressed(mb_left) == true )
        {scr_loadgame_menu(m_index);exit;}
        if ( mouse_check_button_pressed(mb_right) == true &amp;&amp; m_str[6] != "" )
        {global.world_name = m_str[6];instance_create(640,360,obj_prompt_delete);exit;}
    }
}
    
// button 7
if ( mouse_x &gt; x+28 &amp;&amp; mouse_x &lt; x+160+string_width(m_str[7]) )
{
    if ( mouse_y &gt; y+398-(string_height(m_str[7])/2) &amp;&amp; mouse_y &lt; y+398+(string_height(m_str[7])/2) )
    {
        m_index = 7;
        if ( mouse_check_button_pressed(mb_left) == true )
        {scr_loadgame_menu(m_index);exit;}
        if ( mouse_check_button_pressed(mb_right) == true &amp;&amp; m_str[7] != "" )
        {global.world_name = m_str[7];instance_create(640,360,obj_prompt_delete);exit;}
    }
}

// button 8
if ( mouse_x &gt; x+28 &amp;&amp; mouse_x &lt; x+160+string_width(m_str[8]) )
{
    if ( mouse_y &gt; y+448-(string_height(m_str[8])/2) &amp;&amp; mouse_y &lt; y+448+(string_height(m_str[8])/2) )
    {
        m_index = 8;
        if ( mouse_check_button_pressed(mb_left) == true )
        {scr_loadgame_menu(m_index);exit;}
        if ( mouse_check_button_pressed(mb_right) == true &amp;&amp; m_str[8] != "" )
        {global.world_name = m_str[8];instance_create(640,360,obj_prompt_delete);exit;}
    }
}
    
// button 9
if ( mouse_x &gt; x+28 &amp;&amp; mouse_x &lt; x+160+string_width(m_str[1]) )
{
    if ( mouse_y &gt; y+498-(string_height(m_str[9])/2) &amp;&amp; mouse_y &lt; y+498+(string_height(m_str[9])/2) )
    {
        m_index = 9;
        if ( mouse_check_button_pressed(mb_left) == true )
        {scr_loadgame_menu(m_index);exit;}
        if ( mouse_check_button_pressed(mb_right) == true &amp;&amp; m_str[9] != "" )
        {global.world_name = m_str[9];instance_create(640,360,obj_prompt_delete);exit;}
    }
}
    
if ( os_type == os_windows )
{
// button 10
if ( mouse_x &gt; x+28 &amp;&amp; mouse_x &lt; x+160+string_width(m_str[10]) )
{
    if ( mouse_y &gt; y+548-(string_height(m_str[10])/2) &amp;&amp; mouse_y &lt; y+548+(string_height(m_str[10])/2) )
    {
        m_index = 10;
        if ( mouse_check_button_pressed(mb_left) == true )
        {scr_loadgame_menu(m_index);exit;}
        if ( mouse_check_button_pressed(mb_right) == true &amp;&amp; m_str[10] != "" )
        {global.world_name = m_str[10];instance_create(640,360,obj_prompt_delete);exit;}
    }
}

// Check for Right Mouse
if ( mouse_check_button_pressed(mb_right) or keyboard_check_pressed(vk_escape) )
{
io_clear();
audio_play_sound(snd_click01,4,false);
obj_menu_start.m_control = true;
m_control = false;
instance_destroy();
exit;
}
}

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Unload Memory
sprite_delete(sprite_id);

if ( os_type == os_windows )
{ds_list_destroy(file_list);}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw Menu
draw_set_color(c_white);
draw_set_alpha(1);
draw_sprite(sprite_id,0,x,y);
draw_set_font(font_gulim_28);
draw_set_halign(fa_left);
draw_set_valign(fa_middle);

if ( m_index != 0 )
{draw_set_color(c_gray);}
else
{draw_set_color(c_white);draw_sprite(spr_main_menu_arrow,0,x+22,y+48);}
draw_text(x+38,y+48,m_str[0]);
draw_set_color(c_white);

if ( m_index != 1 )
{draw_set_color(c_gray);}
else
{draw_set_color(c_white);draw_sprite(spr_main_menu_arrow,0,x+22,y+98);}
draw_text(x+38,y+98,m_str[1]);
draw_set_color(c_white);

if ( m_index != 2 )
{draw_set_color(c_gray);}
else
{draw_set_color(c_white);draw_sprite(spr_main_menu_arrow,0,x+22,y+148);}
draw_text(x+38,y+148,m_str[2]);
draw_set_color(c_white);

if ( m_index != 3 )
{draw_set_color(c_gray);}
else
{draw_set_color(c_white);draw_sprite(spr_main_menu_arrow,0,x+22,y+198);}
draw_text(x+38,y+198,m_str[3]);
draw_set_color(c_white);

if ( m_index != 4 )
{draw_set_color(c_gray);}
else
{draw_set_color(c_white);draw_sprite(spr_main_menu_arrow,0,x+22,y+248);}
draw_text(x+38,y+248,m_str[4]);
draw_set_color(c_white);

if ( m_index != 5 )
{draw_set_color(c_gray);}
else
{draw_set_color(c_white);draw_sprite(spr_main_menu_arrow,0,x+22,y+298);}
draw_text(x+38,y+298,m_str[5]);
draw_set_color(c_white);

if ( m_index != 6 )
{draw_set_color(c_gray);}
else
{draw_set_color(c_white);draw_sprite(spr_main_menu_arrow,0,x+22,y+348);}
draw_text(x+38,y+348,m_str[6]);
draw_set_color(c_white);

if ( m_index != 7 )
{draw_set_color(c_gray);}
else
{draw_set_color(c_white);draw_sprite(spr_main_menu_arrow,0,x+22,y+398);}
draw_text(x+38,y+398,m_str[7]);
draw_set_color(c_white);

if ( m_index != 8 )
{draw_set_color(c_gray);}
else
{draw_set_color(c_white);draw_sprite(spr_main_menu_arrow,0,x+22,y+448);}
draw_text(x+38,y+448,m_str[8]);
draw_set_color(c_white);

if ( m_index != 9 )
{draw_set_color(c_gray);}
else
{draw_set_color(c_white);draw_sprite(spr_main_menu_arrow,0,x+22,y+498);}
draw_text(x+38,y+498,m_str[9]);
draw_set_color(c_white);

if ( m_control == false )
{
draw_sprite_ext(sprite_id,0,x,y,1,1,0,c_dkgray,0.4);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>256,256</point>
  </PhysicsShapePoints>
</object>
