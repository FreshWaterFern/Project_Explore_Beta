<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>server_names = ds_list_create();
server_players = ds_list_create();
udp_socket = network_create_socket(network_socket_udp);
master_server_ip = "";
http_id = http_get("http://www.seabassandgazellestudios.com/patch-page.html");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var send_buffer = buffer_create(1,buffer_grow,1);
buffer_write(send_buffer,buffer_u8,99);
master_server_id = network_send_udp(udp_socket,master_server_ip,6511,send_buffer,buffer_tell(send_buffer));
buffer_delete(send_buffer);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="68">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Async Network
var sock = ds_map_find_value(async_load,"id");
var t = ds_map_find_value(async_load,"type");

var ip = ds_map_find_value(async_load,"ip");
if ( t == network_type_data )
{
    var net_buffer = ds_map_find_value(async_load,"buffer");
    var msg_id = buffer_read(net_buffer,buffer_u8);
    switch(msg_id)
    {
        case 3: // Get Master Server Data
        {
        show_message("MASTER SERVER SENT US STUFF");
        var server_count = buffer_read(net_buffer,buffer_u32);
        ds_list_add(server_names,buffer_read(net_buffer,buffer_string));
        ds_list_add(server_players,buffer_read(net_buffer,buffer_string));
        /*
        if ( server_count-1 != -1 )
        {
        if ( server_count-1 != 0 )
        {
        repeat(server_count-1)
        {
        ds_list_add(server_names,buffer_read(net_buffer,buffer_string));
        ds_list_add(server_players,buffer_read(net_buffer,buffer_string));
        }
        }
        else
        {
        ds_list_add(server_names,buffer_read(net_buffer,buffer_string));
        ds_list_add(server_players,buffer_read(net_buffer,buffer_string));
        }
        }*/
        break;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="62">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Connect to master server
if ds_map_find_value(async_load, "id") == http_id
    {
    if ds_map_find_value(async_load, "status") == 0
       {
       var str_base = string(ds_map_find_value(async_load, "result"));
       var str1 = str_base;
       var str2 = str_base;
       var count = string_length(str1);
       var pos = string_pos("Server Browser: ",str1);
       str1 = string_delete(str1,1,pos+15);
       pos = string_pos("(^3^)",str1);
       str1 = string_delete(str1,pos,pos+string_length(str1));
       master_server_ip = str1;
       
       alarm[0]=10;
       }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Render Server List
draw_set_halign(fa_left);
draw_text(x,y,server_names[| 0]);
draw_text(x-128,y,server_players[| 0]);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
