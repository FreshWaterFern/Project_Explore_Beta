<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize
sprite_external_init();
randomize();
start_time = current_time;
background = background_add("bg_screen1.png",false,false);
file = -2;
WD = working_directory+"vanilla\";
if ( file_exists("file_list.txt") ){WD="";file_log_write("Mods files detected...");}
else{file_log_write("No mods detected... defaulting to base assets.");}
global.item_data = ds_grid_create(1,10);
global.crafting_data = ds_grid_create(1,9);
global.object_data = ds_grid_create(1,14);
global.item_map = ds_map_create();
global.crafting_map = ds_map_create();
global.object_map = ds_map_create();
global.sprite_list = ds_list_create();
global.biome_file_list = ds_list_create();
global.texture_page_list = 0;
texture_compile = 0;
item_load = false;
file_type = 0;
file_dest = "";
file_count = 0;
file_max = 0;
file_step = 0;
load_step = 0;
pre_step = 0;
msg_str = "";
file_total = 0;

// Splash Text List
splash_text = ds_list_create();
ds_list_add(splash_text,"Drinking Veggie Water");
ds_list_add(splash_text,"Searching For Sticks");
ds_list_add(splash_text,"Putting On Mixtape");
ds_list_add(splash_text,"Socializing With Nomads");
ds_list_add(splash_text,"Fishing for Seabass");
ds_list_add(splash_text,"Releasing animals from cages");
ds_list_add(splash_text,"Filling up lakes");
ds_list_add(splash_text,"Mowing the grass");
ds_list_add(splash_text,"Acrhiving book number "+string(irandom(27)+3));
ds_list_add(splash_text,"Projecting possible Exploration");
ds_list_add(splash_text,"Reading un-implemented content");
ds_list_add(splash_text,"Building houses");
ds_list_add(splash_text,"Planting Trees");
ds_list_add(splash_text,"Carbonating soda");
ds_list_add(splash_text,"Cooking eggs on the CPU");

msg_str=splash_text[|irandom(ds_list_size(splash_text)-1)]
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initiate Mod Blacklist
mod_BL_exists = file_exists("mod_blacklist.txt")
if ( mod_BL_exists ){
mod_BL_file = file_text_open_read("mod_blacklist.txt");
global.mod_BL_list = ds_list_create();var eof = 0;
file_text_readln(mod_BL_file);
while(!eof){
eof = file_text_eof(mod_BL_file);
if ( !eof ){
ds_list_add(global.mod_BL_list,file_text_read_string(mod_BL_file));
file_text_readln(mod_BL_file);}
}
file_text_close(mod_BL_file);
mod_BL_file = file_text_open_append("mod_blacklist.txt");
}else{
mod_BL_file = file_text_open_append("mod_blacklist.txt");
file_text_write_string(mod_BL_file,"// -- 1 = Enabled, 0 = Disabled -- \\");file_text_writeln(mod_BL_file);
global.mod_BL_list = ds_list_create();}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Read File List
var str1 = "";str2 = "";var i = 1;var type_found = false;
file_grid = ds_grid_create(1,3);
file_list = file_text_open_read(WD+"file_list.txt");
while(!file_text_eof(file_list)){ // Loop through and process all of the files on our file list.
str1 = "";str2 = "";i = 1;type_found=false;
str1 = file_text_read_string(file_list);file_text_readln(file_list);

while(!type_found){ // Read characters until file type is found


if ( str2 == "items:" &amp;&amp; !type_found ){type_found=true; // "items" file type was found
ds_grid_set(file_grid,ds_grid_width(file_grid)-1,ds_grid_height(file_grid)-1,0); // 0 means it is an "items" file type.
ds_grid_set(file_grid,ds_grid_width(file_grid)-1,ds_grid_height(file_grid)-2,WD+string_replace(str1,"items: ",""));
ds_grid_set(file_grid,ds_grid_width(file_grid)-1,ds_grid_height(file_grid)-3,mod_item_count(file_grid[#ds_grid_width(file_grid)-1,ds_grid_height(file_grid)-2]));
ds_grid_resize(file_grid,ds_grid_width(file_grid)+1,3);file_log_write("Found mod file: "+string_replace(str1,"items: ",""));}

if ( str2 == "crafting:" &amp;&amp; !type_found ){type_found=true;
ds_grid_set(file_grid,ds_grid_width(file_grid)-1,ds_grid_height(file_grid)-1,1); // 1 means it is a "crafting" file type.
ds_grid_set(file_grid,ds_grid_width(file_grid)-1,ds_grid_height(file_grid)-2,WD+string_replace(str1,"crafting: ",""));
ds_grid_set(file_grid,ds_grid_width(file_grid)-1,ds_grid_height(file_grid)-3,mod_craft_count(file_grid[#ds_grid_width(file_grid)-1,ds_grid_height(file_grid)-2]));
ds_grid_resize(file_grid,ds_grid_width(file_grid)+1,3);file_log_write("Found mod file: "+string_replace(str1,"crafting: ",""));}

if ( str2 == "object:" &amp;&amp; !type_found ){type_found=true;
ds_grid_set(file_grid,ds_grid_width(file_grid)-1,ds_grid_height(file_grid)-1,2); // 2 means it is an "object" file type.
ds_grid_set(file_grid,ds_grid_width(file_grid)-1,ds_grid_height(file_grid)-2,WD+string_replace(str1,"object: ",""));
ds_grid_set(file_grid,ds_grid_width(file_grid)-1,ds_grid_height(file_grid)-3,mod_object_count(file_grid[#ds_grid_width(file_grid)-1,ds_grid_height(file_grid)-2]));
ds_grid_resize(file_grid,ds_grid_width(file_grid)+1,3);file_log_write("Found mod file: "+string_replace(str1,"object: ",""));}

if ( str2 == "biome:" &amp;&amp; !type_found ){type_found=true;
ds_list_add(global.biome_file_list,WD+string_replace(str1,"biome: ",""));
file_log_write("Found mod file: "+string_replace(str1,"biome: ",""));}

str2 = str2+string_char_at(str1,i);i++; // Keep stepping through characters

if ( string_length(str2) &gt; 15 &amp;&amp; !type_found ){type_found=true;file_log_write("Corrupt file prefix: "+string(str1));} // Found an incorrect file prefix

if ( type_found ){
// Mod blacklist add mods
if ( !mod_BL_exists ){
if ( ds_list_find_index(global.mod_BL_list,string(str1)+" = 1") == -1 ){
ds_list_add(global.mod_BL_list,string(str1)+" = 1");
file_text_write_string(mod_BL_file,string(str1)+" = 1");
file_text_writeln(mod_BL_file);
}

}else{

if ( ds_list_find_index(global.mod_BL_list,str1+" = 1") == -1 &amp;&amp; ds_list_find_index(global.mod_BL_list,str1+" = 0") == -1 ){
ds_list_add(global.mod_BL_list,string(str1)+" = 1");
file_text_writeln(mod_BL_file);
file_text_write_string(mod_BL_file,string(str1)+" = 1");
}

}}

}}
file_text_close(mod_BL_file);
file_text_close(file_list);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Read Version File
var file_get = file_text_open_read(WD+"version.txt");

if ( file_get != -1 ){
global.mod_version = file_text_read_string(file_get);
file_log_write("Mod version file found: 'version.txt'");
file_log_write("Mod: "+string(global.mod_version));
file_text_close(file_get);}
else{
file_log_write("No mod version file found... Error");
game_end();}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Step Through &amp; Load Scripts

// Item File Type
if ( file_count != ds_grid_width(file_grid)-1 ){

if ( file_grid[#file_count,ds_grid_height(file_grid)-1] == 0 ){ // Load item file
if ( item_load == false &amp;&amp; load_step == 0 &amp;&amp; file_count &lt;= ds_grid_width(file_grid)-1 ){
if ( file == -2 ){file_log_write("Started loading file: "+string(file_grid[#file_count,ds_grid_height(file_grid)-2]));
file=file_text_open_read(file_grid[#file_count,ds_grid_height(file_grid)-2]);
file_total=file_grid[#file_count,ds_grid_height(file_grid)-3];}
mod_item_ini();}
else{file_log_write("Finished loading file: "+string(file_grid[#file_count,ds_grid_height(file_grid)-2]));
file_text_close(file);item_load = false;load_step = false;file_count++;file=-2;pre_step=file_step;file_step=0;}}

if ( file_grid[#file_count,ds_grid_height(file_grid)-1] == 1 ){ // Load crafting file
if ( item_load == false &amp;&amp; load_step == 0 &amp;&amp; file_count &lt;= ds_grid_width(file_grid)-1 ){
if ( file == -2 ){file_log_write("Started loading file: "+string(file_grid[#file_count,ds_grid_height(file_grid)-2]));
file=file_text_open_read(file_grid[#file_count,ds_grid_height(file_grid)-2]);
file_total=file_grid[#file_count,ds_grid_height(file_grid)-3];}
mod_crafting_ini();}
else{file_log_write("Finished loading file: "+string(file_grid[#file_count,ds_grid_height(file_grid)-2]));
file_text_close(file);item_load = false;load_step = false;file_count++;file=-2;pre_step=file_step;file_step=0;}}

if ( file_grid[#file_count,ds_grid_height(file_grid)-1] == 2 ){ // Load object file
if ( item_load == false &amp;&amp; load_step == 0 &amp;&amp; file_count &lt;= ds_grid_width(file_grid)-1 ){
if ( file == -2 ){file_log_write("Started loading file: "+string(file_grid[#file_count,ds_grid_height(file_grid)-2]));
file=file_text_open_read(file_grid[#file_count,ds_grid_height(file_grid)-2]);
file_total=file_grid[#file_count,ds_grid_height(file_grid)-3];}
mod_object_ini();}
else{file_log_write("Finished loading file: "+string(file_grid[#file_count,ds_grid_height(file_grid)-2]));
file_text_close(file);item_load = false;load_step = false;file_count++;file=-2;pre_step=file_step;file_step=0;}}

}else{
if ( texture_compile == 2 ){
file_log_write("Finished loading mods (Time spent, "+string(current_time-start_time)+"ms)");room_goto(room_steam_check)}else{texture_compile++;}} // Finished loading mods
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Dynamic FPS (Faster Loading)
//room_speed = 15;
if ( fps_real &gt; 60 )
{room_speed = fps_real;}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Clear memory
background_delete(background);
ds_list_destroy(splash_text);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Compile our texture page
if ( ds_grid_width(global.item_data) &gt; 1 &amp;&amp; file_count == ds_grid_width(file_grid)-1 &amp;&amp; texture_compile == 1 )
{

var i = 0;var r = 0;var cache = 0;var list = 0;var list_size = 0;var width = ds_grid_width(global.item_data);
sprite_load_begin(4096,4096,1);
for(i=1;i&lt;width;i++){

    if ( global.item_data[#i,4] != 4 ){
    sprite_load_add(string(db_item_get_name(global.item_data[#i,0])),global.item_data[#i,2],1,0,0);

}else{

    // Parse our plant sprites into a list
    global.item_data[#i,2] = string_replace(global.item_data[#i,2],WD,"");
    list = convert_string_to_list(global.item_data[#i,2],",");list_size = ds_list_size(list);
    for(r=0;r&lt;list_size;r++){
    sprite_load_add(string(db_item_get_name(global.item_data[#i,0]))+"_"+string(r),WD+list[|r],1,0,0);}ds_list_destroy(list);
    global.item_data[#i,2] = ds_list_create(); /*create a list for sprite indexs*/
    for(r=0;r&lt;list_size;r++){ds_list_add(global.item_data[#i,2],string(db_item_get_name(global.item_data[#i,0]))+"_"+string(r));}}

if ( global.item_data[#i,4] == 3 ){
sprite_load_add(string(global.item_data[#i,5]),WD+global.item_data[#i,5],1,0,0);}}

global.texture_page_list = sprite_load_end_dynamic();

for(i=1;i&lt;width;i++){

if ( global.item_data[#i,4] != 4 ){

    global.item_data[#i,2] = sprite_load_get(string(db_item_get_name(global.item_data[#i,0])));
    sprite_external_set_offset(global.item_data[#i,2],sprite_external_get_width(global.item_data[#i,2])/2,sprite_external_get_height(global.item_data[#i,2])/2);
    
}else{

    // Handle differently if it is a plant type
    list_size = ds_list_size(global.item_data[#i,2]);list = global.item_data[#i,2];
    for(r=0;r&lt;list_size;r++){;
    list[|r] = sprite_load_get(list[|r]);
    sprite_external_set_offset(list[|r],sprite_external_get_width(list[|r])/2,sprite_external_get_height(list[|r])/2);}
}

if ( global.item_data[#i,4] == 3 ){
global.item_data[#i,5] = sprite_load_get(string(global.item_data[#i,5]));
sprite_external_set_offset(global.item_data[#i,5],sprite_external_get_width(global.item_data[#i,5])/2,sprite_external_get_height(global.item_data[#i,5])/2);}}

texture_compile = 2;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Render Loading Screen
draw_background_ext(background,0,0,1,1,0,c_white,1);
var inst = 0;

// Draw all this crap if it is an item file we are loading
if ( file_count != ds_grid_width(file_grid)-1 ){
if ( file_grid[#file_count,ds_grid_height(file_grid)-1] == 0 ){
var current = real(ds_grid_width(global.item_data)-1);
if ( file_step != 0 &amp;&amp; item_load == false ){
draw_set_color(c_white);
draw_rectangle((view_wview[0]/2)-192,(view_hview[0]/2)+192-14,(view_wview[0]/2)+192,(view_hview[0]/2)+192+16,true);
draw_rectangle((view_wview[0]/2)-193,(view_hview[0]/2)+192-15,(view_wview[0]/2)+193,(view_hview[0]/2)+192+17,true);
draw_rectangle((view_wview[0]/2)-194,(view_hview[0]/2)+192-16,(view_wview[0]/2)+194,(view_hview[0]/2)+192+18,true);
draw_set_color(c_dkgray);
draw_rectangle((view_wview[0]/2)-191,(view_hview[0]/2)+192-13,(view_wview[0]/2)-191+(((current)/(file_total+pre_step))*382),(view_hview[0]/2)+192+15,false);
draw_set_font(font_gulim_22);draw_set_halign(fa_center);draw_set_valign(fa_middle);draw_set_color(c_white);
//draw_sprite_ext(global.item_data[#current,2],0,view_wview[0]/2,view_hview[0]/2,4,4,0,c_white,1);
draw_text(view_wview[0]/2,(view_hview[0]/2)+128,global.item_data[#current,0]);
draw_text(view_wview[0]/2,(view_hview[0]/2)+192,string(((current)/(file_total+pre_step))*100)+"%");
draw_set_font(font_gulim_18);draw_set_valign(fa_top);
draw_text(view_wview[0]/2,(view_hview[0]/2)+256,msg_str);
draw_set_font(font_gulim_12);draw_text(view_wview[0]/2,(view_hview[0]/2)+296,"Item Data File#("+string(file_grid[#file_count,ds_grid_height(file_grid)-2])+")");draw_set_valign(fa_middle);
}

if (irandom(250)==1){msg_str=splash_text[|irandom(ds_list_size(splash_text)-1)]}

var i = 0;var r = 0;var count = 0;var skip_line = 1;
if ( file_step &gt;= 40 ){count = file_step-39}
/*for(r=0;r&lt;42;r++)
{
draw_sprite(global.item_data[#current-r,2],0,view_xview[0]-(r*32)+1264,view_yview+16);count++;
if ( (count &gt;= file_step &amp;&amp; item_load == false) or (item_load == true &amp;&amp; count &gt; file_step) ){exit;}
}*/}

// Draw all this crap if it is a crafting file we are loading
if ( file_grid[#file_count,ds_grid_height(file_grid)-1] == 1 ){
var current = real(ds_grid_width(global.crafting_data)-1);
if ( file_step != 0 &amp;&amp; item_load == false ){
draw_set_color(c_white);
draw_rectangle((view_wview[0]/2)-192,(view_hview[0]/2)+192-14,(view_wview[0]/2)+192,(view_hview[0]/2)+192+16,true);
draw_rectangle((view_wview[0]/2)-193,(view_hview[0]/2)+192-15,(view_wview[0]/2)+193,(view_hview[0]/2)+192+17,true);
draw_rectangle((view_wview[0]/2)-194,(view_hview[0]/2)+192-16,(view_wview[0]/2)+194,(view_hview[0]/2)+192+18,true);
draw_set_color(c_dkgray);
draw_rectangle((view_wview[0]/2)-191,(view_hview[0]/2)+192-13,(view_wview[0]/2)-191+(((current)/(file_total+pre_step))*382),(view_hview[0]/2)+192+15,false);
draw_set_font(font_gulim_22);draw_set_halign(fa_center);draw_set_valign(fa_middle);draw_set_color(c_white);
draw_text_outline(global.crafting_data[#current,0],view_wview[0]/2,(view_hview[0]/2),c_white,c_black);
draw_text(view_wview[0]/2,(view_hview[0]/2)+192,string(((current)/(file_total+pre_step))*100)+"%");
draw_set_font(font_gulim_18);draw_set_valign(fa_top);
draw_text(view_wview[0]/2,(view_hview[0]/2)+256,msg_str);
draw_set_font(font_gulim_12);draw_text(view_wview[0]/2,(view_hview[0]/2)+296,"Crafting Data File#("+string(file_grid[#file_count,ds_grid_height(file_grid)-2])+")");draw_set_valign(fa_middle);
}}

// Draw all this crap if it is a object file we are loading
if ( file_grid[#file_count,ds_grid_height(file_grid)-1] == 2 ){
var current = real(ds_grid_width(global.object_data)-1);
if ( file_step != 0 &amp;&amp; item_load == false ){
draw_set_color(c_white);
draw_rectangle((view_wview[0]/2)-192,(view_hview[0]/2)+192-14,(view_wview[0]/2)+192,(view_hview[0]/2)+192+16,true);
draw_rectangle((view_wview[0]/2)-193,(view_hview[0]/2)+192-15,(view_wview[0]/2)+193,(view_hview[0]/2)+192+17,true);
draw_rectangle((view_wview[0]/2)-194,(view_hview[0]/2)+192-16,(view_wview[0]/2)+194,(view_hview[0]/2)+192+18,true);
draw_set_color(c_dkgray);
draw_rectangle((view_wview[0]/2)-191,(view_hview[0]/2)+192-13,(view_wview[0]/2)-191+(((current)/(file_total+pre_step))*382),(view_hview[0]/2)+192+15,false);
draw_set_font(font_gulim_22);draw_set_halign(fa_center);draw_set_valign(fa_middle);draw_set_color(c_white);
draw_text_outline(global.object_data[#current,0],view_wview[0]/2,(view_hview[0]/2),c_white,c_black);
draw_text(view_wview[0]/2,(view_hview[0]/2)+192,string(((current)/(file_total+pre_step))*100)+"%");
draw_set_font(font_gulim_18);draw_set_valign(fa_top);
draw_text(view_wview[0]/2,(view_hview[0]/2)+256,msg_str);
draw_set_font(font_gulim_12);draw_text(view_wview[0]/2,(view_hview[0]/2)+296,"Object Data File#("+string(file_grid[#file_count,ds_grid_height(file_grid)-2])+")");draw_set_valign(fa_middle);
}}

if (irandom(250)==1){msg_str=splash_text[|irandom(ds_list_size(splash_text)-1)]}}
if ( file_count == ds_grid_width(file_grid)-1 ){
if ( texture_compile == 1 ){
draw_set_font(font_gulim_22);draw_set_halign(fa_center);draw_set_valign(fa_middle);draw_set_color(c_white);
draw_text_outline("Compiling imported images into texture pages",view_wview[0]/2,(view_hview[0]/2),c_white,c_black);
draw_set_font(font_gulim_18);draw_set_valign(fa_top);
draw_text(view_wview[0]/2,(view_hview[0]/2)+256,msg_str);
}}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
