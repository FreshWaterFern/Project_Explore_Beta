<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>obj_menu_loadgame.m_control = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>obj_menu_loadgame.m_control = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Check For Mouse
if ( mouse_check_area(x-256-64,y-16+96,x-256+64,y+16+96) == true )
{
    if ( mouse_check_button_pressed(mb_left) == true )
    {
    io_clear();
    instance_destroy();
    }
}

if ( mouse_check_area(x+256-64,y-16+96,x+256+64,y+16+96) == true )
{
    if ( mouse_check_button_pressed(mb_left) == true )
    {
    io_clear();
    file_delete(global.world_name);
    file_delete(string_replace(global.world_name,".sav",".world"));
    if ( os_type != os_windows )
    {
    ini_open("save_index.ini");
    ini_write_string("data","save1","");
    ini_close();
    }
    with(obj_menu_loadgame)
    {
    m_control = true;
m_index = 0;

if ( os_type == os_windows )
{
global.game_load_id = 1;

list_index = 0;

file_list = ds_list_create();

i = 0;
first_file_name = file_find_first(working_directory+"*.sav",0);
if ( file_exists(first_file_name) == true )
{
ds_list_add(file_list,first_file_name);
for(i=0;i&lt;2;i++)
{
    file_name = file_find_next();
    if ( file_name != first_file_name &amp;&amp; file_name != "" &amp;&amp; ds_list_find_index(file_list,file_name) == -1 )
    {
    ds_list_add(file_list,string(file_name));
    i--;
    }
    else
    {
    i = 0;
    break;
    }
}
}
file_find_close();

ini_open("save_index.ini");
m_str[0] = "Back";

m_str[1] = "";
m_str[2] = "";
m_str[3] = "";
m_str[4] = "";
m_str[5] = "";
m_str[6] = "";
m_str[7] = "";
m_str[8] = "";
m_str[9] = "";
m_str[10] = "";
ini_close();

if ( list_index+1 &lt;= ds_list_size(file_list) )
{
m_str[1] = ds_list_find_value(file_list,list_index);
}
if ( list_index+2 &lt;= ds_list_size(file_list) )
{
m_str[2] = ds_list_find_value(file_list,list_index+1);
}
if ( list_index+3 &lt;= ds_list_size(file_list) )
{
m_str[3] = ds_list_find_value(file_list,list_index+2);
}
if ( list_index+4 &lt;= ds_list_size(file_list) )
{
m_str[4] = ds_list_find_value(file_list,list_index+3);
}
if ( list_index+5 &lt;= ds_list_size(file_list) )
{
m_str[5] = ds_list_find_value(file_list,list_index+4);
}
if ( list_index+6 &lt;= ds_list_size(file_list) )
{
m_str[6] = ds_list_find_value(file_list,list_index+5);
}
if ( list_index+7 &lt;= ds_list_size(file_list) )
{
m_str[7] = ds_list_find_value(file_list,list_index+6);
}
if ( list_index+8 &lt;= ds_list_size(file_list) )
{
m_str[8] = ds_list_find_value(file_list,list_index+7);
}
if ( list_index+9 &lt;= ds_list_size(file_list) )
{
m_str[9] = ds_list_find_value(file_list,list_index+8);
}
if ( list_index+10 &lt;= ds_list_size(file_list) )
{
m_str[10] = ds_list_find_value(file_list,list_index+9);
}
}
else
{
ini_open("save_index.ini");
m_str[0] = "Back";
m_str[1] = ini_read_string("data","save1","");
m_str[2] = ini_read_string("data","save2","");
m_str[3] = ini_read_string("data","save3","");
m_str[4] = ini_read_string("data","save4","");
m_str[5] = ini_read_string("data","save5","");
m_str[6] = ini_read_string("data","save6","");
m_str[7] = ini_read_string("data","save7","");
m_str[8] = ini_read_string("data","save8","");
m_str[9] = ini_read_string("data","save9","");
ini_close();
}
}
    instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_black);
draw_set_alpha(0.75);
draw_rectangle(x-390,y-16,x+390,y+16,false);

if ( mouse_check_area(x-256-64,y-16+96,x-256+64,y+16+96) == true )
{
draw_set_color(c_gray);
draw_rectangle(x-256-64,y-16+96,x-256+64,y+16+96,false);
}
else
{
draw_set_color(c_black);
draw_rectangle(x-256-64,y-16+96,x-256+64,y+16+96,false);
}

if ( mouse_check_area(x+256-64,y-16+96,x+256+64,y+16+96) == true )
{
draw_set_color(c_gray);
draw_rectangle(x+256-64,y-16+96,x+256+64,y+16+96,false);
}
else
{
draw_set_color(c_black);
draw_rectangle(x+256-64,y-16+96,x+256+64,y+16+96,false);
}

draw_set_color(c_white);
draw_set_alpha(1);
draw_set_font(font_gulim_28);
draw_set_valign(fa_middle);
draw_set_halign(fa_center);
draw_text(x,y,"Are you sure you want to delete this game?");
draw_text(x-256,y+96,"No");
draw_text(x+256,y+96,"Yes");
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
