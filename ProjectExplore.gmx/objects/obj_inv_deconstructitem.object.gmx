<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_inv_deconstructitem</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5000001</depth>
  <persistent>0</persistent>
  <parentName>obj_craftbutton_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize
image_speed = 0;
item_select = "";
item_id = 0;
slot1 = 0;
slot2 = 0;
slot3 = 0;
slot4 = 0;
req_item = 0;
req_stack = 0;
req_time = 0;
external_id = global.storage_id;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(external_id){world_obj_update(id)}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Check If Mouse Is Over Button

image_index = 0;

if ( mouse_check_area(x-52,y-17,x+52,y+16) == true )
{
image_index = 1;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Check To See If Inventory Is Open
if ( global.render_gui_page != "inventory" )
{
instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Mouse Click
if ( image_index == 1 )
{
    if ( mouse_check_button_pressed(mb_left) == true )
    {
        var inst = 0;
        repeat(external_id.c_stack[# 0, 0])
        {
        var item_output = item_deconstructiontable_input(external_id.c_inv[# 0, 0]);
        var list_size = ds_list_size(item_output);
        if ( list_size &gt; 0 )
        {
            external_id.c_stack[# 0, 0]--;if ( external_id.c_stack[# 0, 0] == 0 ){external_id.c_inv[# 0, 0] = 0;}
            if ( external_id.c_inv[# 1, 0] == item_output[| 0] )
            {
                if ( external_id.c_stack[# 1, 0]+1 &lt;= item_get_data(external_id.c_inv[# 1, 0],6) )
                {external_id.c_stack[# 1, 0] += 1;}
                else
                {inst = instance_create(external_id.x,external_id.y,objind(obj_item_dropped));inst.item_id=item_output[| 0];inst.item_stack=1;}
            }
            else
            {
            if ( external_id.c_inv[# 1, 0] != 0 ){
            inst = instance_create(external_id.x,external_id.y,objind(obj_item_dropped));inst.item_id=item_output[| 0];inst.item_stack=1;}else{
            external_id.c_inv[# 1, 0] = item_output[| 0];
            external_id.c_stack[# 1, 0] = 1;}
            }
        }
        if ( list_size &gt; 1 )
        {
            if ( external_id.c_inv[# 2, 0] == item_output[| 1] )
            {
                if ( external_id.c_stack[# 2, 0]+1 &lt;= item_get_data(external_id.c_inv[# 2, 0],6) )
                {external_id.c_stack[# 2, 0] += 1;}
                else
                {inst = instance_create(external_id.x,external_id.y,objind(obj_item_dropped));inst.item_id=item_output[| 1];inst.item_stack=1;}
            }
            else
            {
            if ( external_id.c_inv[# 2, 0] != 0 ){
            inst = instance_create(external_id.x,external_id.y,objind(obj_item_dropped));inst.item_id=item_output[| 1];inst.item_stack=1;}else{
            external_id.c_inv[# 2, 0] = item_output[| 1];
            external_id.c_stack[# 2, 0] = 1;}
            }
        }
        if ( list_size &gt; 2 )
        {
            if ( external_id.c_inv[# 3, 0] == item_output[| 2] )
            {
                if ( external_id.c_stack[# 3, 0]+1 &lt;= item_get_data(external_id.c_inv[# 3, 0],6) )
                {external_id.c_stack[# 3, 0] += 1;}
                else
                {inst = instance_create(external_id.x,external_id.y,objind(obj_item_dropped));inst.item_id=item_output[| 2];inst.item_stack=1;}
            }
            else
            {
            if ( external_id.c_inv[# 3, 0] != 0 ){
            inst = instance_create(external_id.x,external_id.y,objind(obj_item_dropped));inst.item_id=item_output[| 2];inst.item_stack=1;}else{
            external_id.c_inv[# 3, 0] = item_output[| 2];
            external_id.c_stack[# 3, 0] = 1;}
            }
        }
        with(obj_inv_slot){alarm[0]=1;}
        ds_list_destroy(item_output);
    }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="75">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Render overlay (items to be outputted)
if ( global.render_gui_page == "inventory" )
{
var item_output = item_deconstructiontable_input(external_id.c_inv[# 0, 0]);
if ( ds_list_size(item_output) &gt; 0 )
{
var view_xcenter = view_wview[0]/2;
var view_ycenter = view_hview[0]/2;
draw_set_alpha(0.5);
draw_sprite(item_get_data(item_output[| 0],2),0,view_xcenter-278,view_ycenter-16);
if ( ds_list_size(item_output) &gt; 1 )
{
draw_sprite(item_get_data(item_output[| 1],2),0,view_xcenter-242,view_ycenter-16);
if ( ds_list_size(item_output) &gt; 2 )
{
draw_sprite(item_get_data(item_output[| 2],2),0,view_xcenter-206,view_ycenter-16);
}
}
draw_set_alpha(1);
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ( global.render_gui_page == "inventory" )
{
    draw_enable_alphablend(false);
    draw_sprite(sprite_index,image_index,x,y);
    draw_enable_alphablend(true);
    draw_set_color(c_white);
    draw_set_halign(fa_center);
    draw_set_valign(fa_middle);
    draw_set_font(font_gulim_12);
    draw_text(x,y,"Deconstruct");
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>17,17</point>
    <point>18,18</point>
  </PhysicsShapePoints>
</object>
