<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_forge_button</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5000001</depth>
  <persistent>0</persistent>
  <parentName>obj_craftbutton_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize
image_speed = 0;
item_select = "";
item_id = 0;
slot1 = 0;
slot2 = 0;
req_item = 0;
req_stack = 0;
req_time = 0;
burn_time = 0;
burn_spent = 0;
item_proc = false;
external_id = global.storage_id;
/*
with(global.storage_id)
{
other.item_select = item_select;
other.item_id = item_id;
other.req_item = req_item;
other.req_stack = req_stack;
other.req_time = req_time;
other.burn_time = burn_time;
other.burn_spent = burn_spent;
other.item_proc = item_proc;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
with(external_id)
{
item_select = other.item_select;
item_id = other.item_id;
req_item = other.req_item;
req_stack = other.req_stack;
req_time = other.req_time;
burn_time = other.burn_time;
burn_spent = other.burn_spent;
item_proc = other.item_proc;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Check If Mouse Is Over Button

image_index = 0;

if ( mouse_check_area(x-96,y-17,x+96,y+16) == true )
{
image_index = 1;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Check To See If Inventory Is Open
if ( global.render_gui_page != "inventory" )
{
instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Mouse Click
if ( image_index == 1 )
{
    if ( mouse_check_button_pressed(mb_left) == true )
    {
    if ( external_id.c_inv[# 0,1] == 3 or external_id.c_inv[# 0,1] == 17 or external_id.c_inv[# 0,1] == 154 )
    {
    if ( external_id.c_inv[# 0,0] == external_id.req_item &amp;&amp; external_id.c_stack[# 0,0] &gt;= external_id.req_stack &amp;&amp; external_id.c_stack[# 0,1] &gt; 0 )
    {
        if ( external_id.item_proc == false &amp;&amp; external_id.item_id != 0 &amp;&amp; external_id.item_select != "" )
        {
        external_id.item_proc = true;
        external_id.c_stack[# 0,0] -= external_id.req_stack;if(external_id.c_stack[# 0,0]==0){external_id.c_inv[# 0,0]=0;}
        if ( external_id.c_stack[# 0,0] == 0 )
        {external_id.c_inv[# 0,0] = 0;}
        with(obj_inv_slot){alarm[0]=1;}
        }
        else
        {
        external_id.burn_spent = 0;
        external_id.item_proc = false;
        external_id.item_id = 0;
        external_id.item_select = "";
        external_id.req_item = 0;
        external_id.req_stack = 0;
        external_id.req_time = 0;
        }
    }
    }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Render Inventory Slot

if ( global.render_gui_page == "inventory" )
{
    draw_enable_alphablend(false);
    draw_sprite(sprite_index,image_index,x,y);
    draw_enable_alphablend(true);
    draw_set_color(c_white);
    draw_set_halign(fa_center);
    draw_set_valign(fa_middle);
    draw_set_font(font_gulim_12);
    if ( external_id.item_select == "" )
    {
    draw_text(x,y,"Forge Item");
    }
    else
    {
    draw_text(x,y,string(external_id.item_select));
    }
    if ( external_id.item_proc == true )
    {draw_text_outline(string((external_id.burn_spent/external_id.req_time)*100)+"%",x,y+32,c_white,c_black);}
    // DEBUGGING
    draw_set_color(c_dkgray);
    draw_rectangle(x-96,y+64-12,x+96,y+64+12,false);
    if ( external_id.burn_time &gt; 0 )
    {
    draw_set_color(c_orange);
    draw_rectangle(x-96,y+64-12,x-96+(192*external_id.burn_time),y+64+12,false);
    }
    draw_set_color(c_white)
    //draw_text(x,y+64,"Fire: "+string(burn_time*100)+"%");
    if ( mouse_check_area(x-96,y+64-12,x+96,y+64+12) == true )
    {
    //draw_set_color(c_black);draw_set_alpha(0.2);
    draw_text_outline("Fire: "+string(external_id.burn_time*100)+"%",x,y+64,c_white,c_black);
    draw_set_color(c_white);draw_set_alpha(1);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>17,17</point>
    <point>18,18</point>
  </PhysicsShapePoints>
</object>
