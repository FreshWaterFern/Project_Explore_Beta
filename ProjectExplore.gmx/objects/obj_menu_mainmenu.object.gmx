<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize

inst_input[3] = -9999;
inst_input[2] = -9999;
inst_input[1] = -9999;
inst_input[0] = -9999;

cache_y[0] = 0;
cache_y[1] = 0;
cache_y[2] = 0;
cache_y[3] = 0;

cache_x[0] = obj_volume.xm;
cache_x[1] = obj_volume.x1;
cache_x[2] = obj_volume.x2;
cache_x[3] = obj_volume.x3;

ini_open("settings.ini");
control_cache[0,0] = ini_read_real("controls","MAIN_UP",ord('W'));
control_cache[0,1] = ini_read_real("controls","ALT_UP",vk_up);
control_cache[1,0] = ini_read_real("controls","MAIN_DOWN",ord('S'));
control_cache[1,1] = ini_read_real("controls","ALT_DOWN",vk_down);
control_cache[2,0] = ini_read_real("controls","MAIN_LEFT",ord('A'));
control_cache[2,1] = ini_read_real("controls","ALT_LEFT",vk_left);
control_cache[3,0] = ini_read_real("controls","MAIN_RIGHT",ord('D'));
control_cache[3,1] = ini_read_real("controls","ALT_RIGHT",vk_right);
control_cache[4,0] = ini_read_real("controls","MAIN_WALK",vk_lshift);
control_cache[4,1] = ini_read_real("controls","ALT_WALK",vk_lcontrol);
control_cache[5,0] = ini_read_real("controls","MAIN_INTERACT",ord('E'));
control_cache[5,1] = ini_read_real("controls","ALT_INTERACT",ord('F'));
control_cache[6,0] = ini_read_real("controls","MAIN_INVENTORY",ord('I'));
control_cache[6,1] = ini_read_real("controls","ALT_INVENTORY",vk_tab);
ini_close();

control_set[0,0] = 0;
control_set[0,1] = 0;
control_set[1,0] = 0;
control_set[1,1] = 0;
control_set[2,0] = 0;
control_set[2,1] = 0;
control_set[3,0] = 0;
control_set[3,1] = 0;
control_set[4,0] = 0;
control_set[4,1] = 0;
control_set[5,0] = 0;
control_set[5,1] = 0;
control_set[6,0] = 0;
control_set[6,1] = 0;

res_cache = obj_main_logic.g_res;
vsync_cache = obj_main_logic.g_vsync;
sampling_cache = obj_main_logic.g_sampling;
blood_cache = obj_main_logic.g_blood;
decal_cache = obj_main_logic.g_decals;
fs_cache = obj_main_logic.g_fs;

audio_track = audio_create_stream("music\01 Exploration.oga");
ds_list_add(obj_volume.list_music,audio_track);
audio_play_sound(audio_track,3,false);

gray = make_colour_rgb(130,130,130);
button_select = -2;
mouse_over = -1;

global.new_game = false;

gm_restart = 0;

menu_state = "Main";
track_volume = 0;
surface_main = surface_create(view_wview[0],view_hview[0]);
surface_update = true;

image_max_x =  background_get_width(global.bg_menu)-1280;
image_max_y =  background_get_height(global.bg_menu)-720;

math_set_epsilon(0.0001);


// Special Variables
bg_x = irandom(image_max_x);
bg_y = irandom(image_max_y);
bg_speed = random_range(3,3.5);
bg_dir = irandom(359);
global.world_size = "Small";
file_list = ds_list_create();
mod_cache_list = ds_list_create();
file_cache = "";

// UI Variables
button_slide = 0;
slider_set[0] = 0;
slider_pos[0] = 0;
slider_pos[1] = 136;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_goto(room_credits);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Generate File List

if ( os_type == os_windows )
{
file_log_write("Beginning 'Load Game' file search...");
ds_list_clear(file_list);
global.game_load_id = 1;

var list_index = 0;

var i = 0;
var first_file_name = file_find_first(working_directory+"*.sav",0);
var file_name = "";
if ( file_exists(first_file_name) == true )
{
ds_list_add(file_list,first_file_name);
for(i=0;i&lt;2;i++)
{
    file_name = file_find_next();
    if ( file_name != first_file_name &amp;&amp; file_name != "" &amp;&amp; ds_list_find_index(file_list,file_name) == -1 )
    {
    ds_list_add(file_list,string(file_name));
    i--;
    }
    else
    {
    i = 0;
    break;
    }
}
}
file_find_close();
file_log_write("Detected a total of "+string(ds_list_size(file_list))+" '.sav' files.");
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Unload Memory
if ( !gm_restart ){
audio_stop_sound(audio_track);

ds_list_delete(obj_volume.list_music,ds_list_find_index(obj_volume.list_music,audio_track));

ds_list_destroy(file_list);
ds_list_destroy(mod_cache_list);

audio_destroy_stream(audio_track);

if(surface_exists(surface_main)){
surface_free(surface_main);}

// Clear arrays
inst_input = 0;
cache_y = 0;
cache_x = 0;
control_cache = 0;
control_set = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Unload Memory
if ( !gm_restart ){
audio_stop_sound(audio_track);

ds_list_delete(obj_volume.list_music,ds_list_find_index(obj_volume.list_music,audio_track));

ds_list_destroy(file_list);
ds_list_destroy(mod_cache_list);

audio_destroy_stream(audio_track);

if(surface_exists(surface_main)){
surface_free(surface_main);}

// Clear arrays
inst_input = 0;
cache_y = 0;
cache_x = 0;
control_cache = 0;
control_set = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="75">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Render Application

// DISABLE ALPHABLEND BECAUSE SURFACES //
draw_enable_alphablend(0);

var offset = application_get_position();

res_x = window_get_width();res_y = window_get_height();
better_scaling_draw_surface(application_surface,offset[0],offset[1],res_x/1280,res_y/720,0,c_white,1,obj_main_logic.g_sampling+1);

var base_h = 720;
var aspect = res_x/res_y;
var ww = display_get_width();
var hh = display_get_height();

if ( ww/hh &lt; 1.76 or ww/hh &gt; 1.79 ){
display_set_gui_maximise(res_x,res_y, 0, res_y-(res_y*1.7777));}

draw_enable_alphablend(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Handle Logic And Drawing
draw_background(global.bg_menu,0,0);

switch(menu_state){

case "Main":{
Menu_MainMenu_Main();break;}

case "SP":{
Menu_MainMenu_SP();break;}

case "New Game":{
Menu_MainMenu_NewGame();break;}

case "Load Game":{
Menu_MainMenu_LoadGame();break;}

case "Confirm DeleteGame":{
Menu_MainMenu_Confirm_DeleteGame();break;}

case "MP":{
Menu_MainMenu_MP();break;}

case "Options":{
Menu_MainMenu_Options();break;}

case "Video":{
Menu_MainMenu_Video();break;}

case "Confirm Video":{
Menu_MainMenu_Confirm_Video();break;}

case "Audio":{
Menu_MainMenu_Audio();break;}

case "Confirm Audio":{
Menu_MainMenu_Confirm_Audio();break;}

case "Controls":{
Menu_MainMenu_Controls();break;}

case "Confirm Controls":{
Menu_MainMenu_Confirm_Controls();break;}

case "Mods":{
Menu_MainMenu_Mods();break;}

case "Confirm Mods":{
Menu_MainMenu_Confirm_Mods();break;}

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>256,256</point>
  </PhysicsShapePoints>
</object>
