<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_wall_wood</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_solid_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize
obj_type = 2;
str_display = "";
str_display2 = "";
mouse_over = false;
construct_health = 3000;
construct_maxhealth = 3000;
display_health = 0;
alarm[0]=1;
tex_side = background_get_texture(t_stonebrick1);
tex_top = background_get_texture(t_stonebrick2);

active = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Delete From World Data
world_obj_delete(id);
if ( image_angle == 0 )
{
ai_grid_remove_self(x-(sprite_width/2),y-(sprite_height/2),x+(sprite_width/2),y+(sprite_height/2));
}
else
{
ai_grid_remove_self(x-(sprite_height/2),y-(sprite_width/2),x+(sprite_height/2),y+(sprite_width/2));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Add To World Data &amp; AI Grid
world_obj_add(id);

if ( construct_health == 0 )
{
construct_health = construct_maxhealth;
}

if ( image_angle == 0 )
{
ai_grid_add_self(x-(sprite_width/2),y-(sprite_height/2),x+(sprite_width/2),y+(sprite_height/2));
}
else
{
ai_grid_add_self(x-(sprite_height/2),y-(sprite_width/2),x+(sprite_height/2),y+(sprite_width/2));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Update Depth
if ( active == true )
{
if ( image_angle = 0 )
{
depth=w3d_depth(x,y,-y+10);
}
else
{
depth=w3d_depth(x,y,-y+9);
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Object Activity

if ( point_distance(x,y,obj_player.x,obj_player.y) &lt; 1400 or global.render_world_map == true )
{
active = true;
}
else
{
active = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Check if mouse is over &amp;&amp; Deletion
if ( global.render_gui_page == "none" &amp;&amp; obj_player.v_item_equipped == 68 &amp;&amp; global.tablet_mode == 0 )
{
str_display2 = "";
var point_dist_test = point_distance(x,y,obj_player.x,obj_player.y);
if ( point_dist_test &lt; 96 )
{
if ( image_angle == 0 )
{
if ( mouse_x &gt; x-(sprite_width/2) &amp;&amp; mouse_x &lt; x+(sprite_width/2) &amp;&amp; mouse_y &gt; y-(sprite_height/2) &amp;&amp; mouse_y &lt; y+(sprite_height/2) )
{
        mouse_over = true;
}
else{mouse_over = false;}
}
else
{
if ( mouse_x &gt; x-(sprite_height/2) &amp;&amp; mouse_x &lt; x+(sprite_height/2) &amp;&amp; mouse_y &gt; y-(sprite_width/2) &amp;&amp; mouse_y &lt; y+(sprite_width/2) )
{
        mouse_over = true;
}
else{mouse_over = false;}
}
if ( mouse_over == true &amp;&amp; keyboard_check(vk_shift) == false )
{
    str_display = keyboard_get_str(obj_player.key_walk_main);
}
if ( mouse_over == true &amp;&amp; keyboard_check(vk_shift) == true )
{
    str_display = "Right MB (Destroy)";
    //str_display2 = "Left MB (Upgrade)";
}

if ( mouse_over == false )
{
    str_display = "";
}

if ( point_dist_test &lt; 96 )
{
if ( mouse_over == true &amp;&amp; keyboard_check(vk_shift) == true &amp;&amp; mouse_check_button_pressed(mb_right) == true )
{
var inst = instance_create(x,y,obj_item_dropped);
inst.item_id = 6;
inst.item_stack = 1;
inst = instance_create(x,y,obj_item_dropped);
inst.item_id = 4;
inst.item_stack = 8;
inst = instance_create(x,y,obj_item_dropped);
inst.item_id = 4;
inst.item_stack = 8;
instance_destroy();
}
if ( mouse_over == true &amp;&amp; keyboard_check(vk_shift) == true &amp;&amp; mouse_check_button_pressed(mb_left) == true )
{
/*
var item1_count = inventory_get_item(4,0,0);
if ( item1_count &gt;= 16 )
{inventory_get_item(4,1,16);}
var inst = instance_create(x,y,obj_construct_stone_wall);
instance_destroy();*/
}
}

}
else{mouse_over=false;str_display="";}
}
else{mouse_over=false;str_display="";}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Check For Foundation
var inst = instance_nearest(x,y,obj_foundation_parent);
var dist = point_distance(x,y,inst.x,inst.y);
if ( dist &gt; 96 )
{
var inst = instance_create(x,y,obj_item_dropped);
inst.item_id = 6;
inst.item_stack = 1;
instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Deconstruct Popup &amp; Health
if ( global.render_gui_page == "none" )
{
if ( str_display != "" )
{
draw_set_color(c_white);
draw_set_font(font_gulim_12);
draw_set_halign(fa_center);
draw_set_valign(fa_middle);
if ( str_display2 == "Left MB (Upgrade)" ){
draw_text_outline(str_display,x,y-12,c_white,c_black);
}else{draw_text_outline(str_display,x,y,c_white,c_black);}
}
if ( str_display2 != "" )
{
draw_set_color(c_white);
draw_set_font(font_gulim_12);
draw_set_halign(fa_center);
draw_set_valign(fa_middle);
draw_text_outline(str_display2,x,y+12,c_white,c_black);
/*if ( str_display2 == "Left MB (Upgrade)" ){
draw_set_font(font_gulim_8);draw_sprite_ext(spr_weapon_rock,0,x+80,y+12,0.75,0.75,0,c_white,1);draw_text_outline("16x",x+72,y+4,c_white,c_black);
}*/
}

// Render Health
if ( display_health &gt; 0 )
{
display_health -= 0.01;
draw_set_alpha(display_health);
draw_set_color(c_black);
draw_rectangle(x-35,y-6,x+35,y+6,false);
draw_set_color(c_red);
draw_rectangle(x-34,y-5,x+34,y+5,false);
draw_set_color(c_green);
draw_rectangle(x-34,y-5,x-34+((construct_health/construct_maxhealth)*68),y+5,false);
draw_set_color(c_white);
draw_set_font(font_gulim_8);
draw_set_halign(fa_center);draw_set_valign(fa_middle);
draw_set_color(c_white);
draw_text(x,y,string(construct_health)+"/"+string(construct_maxhealth));
draw_set_alpha(1);
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Render
if ( active == true )
{
if ( mouse_over == false )
{
draw_set_color(c_white);
}
else
{
draw_set_color(c_dkgray);
}
if ( image_angle == 0 )
{
w3d_draw_cube_ext(tex_side,tex_side,x,y,0,32,128,16);
}
else
{
w3d_draw_cube_ext(tex_top,tex_side,x,y,0,32,16,128);
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>50,162</point>
    <point>82,82</point>
  </PhysicsShapePoints>
</object>
