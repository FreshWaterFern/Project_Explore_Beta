<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_solid_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize
active = true;
selected = false;
str1 = "";str2 = "";
mouse_frames = 0;
obj_name = "";
texture = 0;
type = 0;
rot = 0;
is_3d = 0;
index = 0;
v_indoors = false;
c_inv = ds_grid_create(1,1);
c_stack = ds_grid_create(1,1);
data_x = ds_list_create();
data_y = ds_list_create();
data_z1 = ds_list_create();
data_z2 = ds_list_create();
data_xsize = ds_list_create();
data_ysize = ds_list_create();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Destroy Event

// Drop contained items
var i = 0;var r = 0;var inst = 0;var item = 0;var stack = 0;
for(i=0;i&lt;ds_grid_width(c_inv);i++){
for(r=0;r&lt;ds_grid_height(c_inv);r++){
item = ds_grid_get(c_inv,i,r);
if ( item != 0 ){
stack = ds_grid_get(c_stack,i,r);
inst = instance_create(x,y,obj_item_dropped);
inst.item_id = item;inst.item_stack = stack;
}}}

ds_list_destroy(data_x);
ds_list_destroy(data_y);
ds_list_destroy(data_z1);
ds_list_destroy(data_z2);
ds_list_destroy(data_xsize);
ds_list_destroy(data_ysize);
ds_grid_destroy(c_inv);
ds_grid_destroy(c_stack);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Depth Update
depth = w3d_depth(x,y,0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Interact
/// Open Storage
if ( active == true )
{
    if ( global.render_gui_page == "none" )
    {
    if ( mouse_x &gt; x - sprite_width/2 &amp;&amp; mouse_x &lt; x + sprite_width/2 &amp;&amp; mouse_y &gt; y - sprite_height/2 &amp;&amp; mouse_y &lt; y + sprite_height/2 )
    {
            if ( point_distance(x,y,obj_player.x,obj_player.y) &lt; 64 )
            {
            selected = true;
            if ( keyboard_check(obj_player.key_walk_main) or keyboard_check(obj_player.key_walk_alt) )
            {
            if ( mouse_check_button_pressed(mb_left) )
            {
                audio_play_sound(snd_click03,4,false);
                io_clear();
                v_gathering = false;
                global.render_gui_page = "inventory";
                global.render_characters = true;
                global.render_world_tiles = true;
                global.render_gui_1 = false;
                global.render_world_shadows = false;
                global.storage_id = id;
                //global.storage_type = 29;
                //ds_grid_copy(global.c_inv_storage,c_inv);
                //ds_grid_copy(global.c_stack_storage,c_stack);
                inventory_ini_player();
                inventory_ini_storage(clamp(ds_grid_width(c_inv),1,8),clamp(ds_grid_height(c_inv),1,8),c_inv,c_stack);
            }
            if ( mouse_check_button_pressed(mb_right) )
            {
            var inst = instance_create(x,y,obj_item_dropped);
            inst.item_id = db_item_get_name(obj_name);
            inst.item_stack = 1;
            instance_destroy();
            }
            }
        }
        else
        {selected = false;}
    }
    else
    {selected = false;}
    }
    else
    {
    if ( global.storage_id == id )
    {world_obj_update(id);}
    else
    {selected = false;}
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
