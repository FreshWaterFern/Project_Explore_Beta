<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>m_control = true;

m_index = 0;

m_str[4] = "Quit Game";
m_str[3] = "Credits";
m_str[2] = "Settings";
m_str[1] = "Multiplayer";
m_str[0] = "Singleplayer";

sprite_id = sprite_add("spr_main_menu_back.png",0,false,false,0,0);

audio_track = audio_create_stream("music\01 Exploration.oga");
ds_list_add(obj_volume.list_music,audio_track);
audio_play_sound(audio_track,3,false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_goto(room_credits);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Check For Mouse Input

if ( m_control == true )
{
// button 0
if ( mouse_x &gt; x+28 &amp;&amp; mouse_x &lt; x+160+string_width(m_str[0]) )
{
    if ( mouse_y &gt; y+48-(string_height(m_str[0])/2) &amp;&amp; mouse_y &lt; y+48+(string_height(m_str[0])/2) )
    {
        //if ( m_index != 0 ){audio_play_sound(snd_mouseover1,4,false);}
        m_index = 0;
        if ( mouse_check_button_pressed(mb_left) == true )
        {scr_main_menu(m_index)}exit;
    }
    else{m_index=-1;}
}
else{m_index=-1;}

// button 1
if ( mouse_x &gt; x+28 &amp;&amp; mouse_x &lt; x+160+string_width(m_str[1]) )
{
    if ( mouse_y &gt; y+148-(string_height(m_str[1])/2) &amp;&amp; mouse_y &lt; y+148+(string_height(m_str[1])/2) )
    {
        //if ( m_index != 1 ){audio_play_sound(snd_mouseover1,4,false);}
        m_index = 1;
        if ( mouse_check_button_pressed(mb_left) == true )
        {scr_main_menu(m_index)}exit;
    }
    else{m_index=-1;}
}
else{m_index=-1;}

// button 2
if ( mouse_x &gt; x+28 &amp;&amp; mouse_x &lt; x+160+string_width(m_str[2]) )
{
    if ( mouse_y &gt; y+248-(string_height(m_str[2])/2) &amp;&amp; mouse_y &lt; y+248+(string_height(m_str[2])/2) )
    {
        //if ( m_index != 2 ){audio_play_sound(snd_mouseover1,4,false);}
        m_index = 2;
        if ( mouse_check_button_pressed(mb_left) == true )
        {scr_main_menu(m_index)}exit;
    }
    else{m_index=-1;}
}
else{m_index=-1;}

// button 3
if ( mouse_x &gt; x+28 &amp;&amp; mouse_x &lt; x+160+string_width(m_str[3]) )
{
    if ( mouse_y &gt; y+348-(string_height(m_str[3])/2) &amp;&amp; mouse_y &lt; y+348+(string_height(m_str[3])/2) )
    {
        //if ( m_index != 3 ){audio_play_sound(snd_mouseover1,4,false);}
        m_index = 3;
        if ( mouse_check_button_pressed(mb_left) == true )
        {scr_main_menu(m_index)}exit;
    }
    else{m_index=-1;}
}
else{m_index=-1;}

// button 4
if ( mouse_x &gt; x+28 &amp;&amp; mouse_x &lt; x+160+string_width(m_str[4]) )
{
    if ( mouse_y &gt; y+448-(string_height(m_str[4])/2) &amp;&amp; mouse_y &lt; y+448+(string_height(m_str[4])/2) )
    {
        //if ( m_index != 4 ){audio_play_sound(snd_mouseover1,4,false);}
        m_index = 4;
        if ( mouse_check_button_pressed(mb_left) == true )
        {scr_main_menu(m_index)}exit;
    }
    else{m_index=-1;}
}
else{m_index=-1;}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Unload Memory
sprite_delete(sprite_id);
audio_stop_sound(audio_track);
ds_list_delete(obj_volume.list_music,ds_list_find_index(obj_volume.list_music,audio_track));
audio_destroy_stream(audio_track);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw Menu
draw_set_color(c_white);
draw_set_alpha(1);
draw_sprite(sprite_id,0,x,y);
draw_set_font(font_gulim_28);
draw_set_halign(fa_left);
draw_set_valign(fa_middle);

if ( m_index != 0 )
{draw_set_color(c_gray);}
else
{draw_set_color(c_white);draw_sprite(spr_main_menu_arrow,0,x+22,y+48);}
draw_text(x+38,y+48,m_str[0]);
draw_set_color(c_white);

if ( m_index != 1 )
{draw_set_color(c_dkgray);}
else
{draw_set_color(c_gray);draw_sprite(spr_main_menu_arrow,0,x+22,y+148);}
draw_set_color(c_dkgray);
draw_text(x+38,y+148,m_str[1]);
draw_set_color(c_white);

if ( m_index != 2 )
{draw_set_color(c_gray);}
else
{draw_set_color(c_white);draw_sprite(spr_main_menu_arrow,0,x+22,y+248);}
draw_text(x+38,y+248,m_str[2]);
draw_set_color(c_white);

if ( m_index != 3 )
{draw_set_color(c_gray);}
else
{draw_set_color(c_white);draw_sprite(spr_main_menu_arrow,0,x+22,y+348);}
draw_text(x+38,y+348,m_str[3]);
draw_set_color(c_white);

if ( m_index != 4 )
{draw_set_color(c_gray);}
else
{draw_set_color(c_white);draw_sprite(spr_main_menu_arrow,0,x+22,y+448);}
draw_text(x+38,y+448,m_str[4]);
draw_set_color(c_white);

if ( m_control == false )
{draw_sprite_ext(sprite_id,0,x,y,1,1,0,c_dkgray,0.5);}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>256,256</point>
  </PhysicsShapePoints>
</object>
