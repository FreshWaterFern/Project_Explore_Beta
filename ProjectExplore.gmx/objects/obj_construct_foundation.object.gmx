<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_foundation_wood</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_foundation_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize
obj_type = 2;
snap_right = x+(sprite_width/2);
snap_up = y-(sprite_height/2);
snap_left = x-(sprite_width/2);
snap_down = y+(sprite_height/2);
mouse_over = false;
str_display = "";
water_inst = collision_rectangle(x-56,y-56,x+56,y+56,obj_water_parent,false,true);
tex = sprite_get_texture(texture_wood_5,0);

//house_id = construct_house_ini(0);

// Depth
depth=w3d_depth(x,y,-y+128)

// Add To World Data &amp; AI Grid
world_obj_add(id);

v_is_room = false;
build_parts = ds_list_create();
repeat(5){ds_list_add(build_parts,0);}
// house_parts, explained, indexs: 
//0 = wall_right, 1 = wall_up, 2 = wall_left, 3 = wall_down, 4 = ceiling
//values: 0 = non-existant, 1 = existant
active = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Delete From World Data
world_obj_delete(id);
ds_list_destroy(build_parts);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Object Activity

if ( point_distance(x,y,obj_player.x,obj_player.y) &lt; 1400 or global.render_world_map == true )
{
active = true;
}
else
{
active = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Check if mouse is over &amp;&amp; Deletion
if ( global.render_gui_page == "none" &amp;&amp; obj_player.v_item_equipped == 68 &amp;&amp; global.tablet_mode == 0 )
{
var point_dist_test = point_distance(x,y,obj_player.x,obj_player.y);
if ( water_inst == noone )
{
if ( point_dist_test &lt; 96 )
{
if ( image_angle == 0 )
{
if ( mouse_x &gt; x-(sprite_width/2) &amp;&amp; mouse_x &lt; x+(sprite_width/2) &amp;&amp; mouse_y &gt; y-(sprite_height/2) &amp;&amp; mouse_y &lt; y+(sprite_height/2) )
{
        mouse_over = true;
}
else{mouse_over = false;}
}
else
{
if ( mouse_x &gt; x-(sprite_height/2) &amp;&amp; mouse_x &lt; x+(sprite_height/2) &amp;&amp; mouse_y &gt; y-(sprite_width/2) &amp;&amp; mouse_y &lt; y+(sprite_width/2) )
{
        mouse_over = true;
}
else{mouse_over = false;}
}
if ( mouse_over == true &amp;&amp; keyboard_check(vk_shift) == false )
{
    str_display = keyboard_get_str(obj_player.key_walk_main);
}
if ( mouse_over == true &amp;&amp; keyboard_check(vk_shift) == true )
{
    str_display = "Right Mouse Button";
}

if ( mouse_over == false )
{
    str_display = "";
}

if ( point_dist_test &lt; 96 )
{
if ( mouse_over == true &amp;&amp; keyboard_check(vk_shift) == true &amp;&amp; mouse_check_button_pressed(mb_right) == true )
{
var inst = instance_create(x,y,obj_item_dropped);
inst.item_id = 5;
inst.item_stack = 1;
instance_destroy();
}
}

}
else{mouse_over=false;str_display="";}
}
else
{
if ( point_dist_test &gt; 70 &amp;&amp; point_dist_test &lt; 96 )
{
if ( image_angle == 0 )
{
if ( mouse_x &gt; x-(sprite_width/2) &amp;&amp; mouse_x &lt; x+(sprite_width/2) &amp;&amp; mouse_y &gt; y-(sprite_height/2) &amp;&amp; mouse_y &lt; y+(sprite_height/2) )
{
        mouse_over = true;
}
else{mouse_over = false;}
}
else
{
if ( mouse_x &gt; x-(sprite_height/2) &amp;&amp; mouse_x &lt; x+(sprite_height/2) &amp;&amp; mouse_y &gt; y-(sprite_width/2) &amp;&amp; mouse_y &lt; y+(sprite_width/2) )
{
        mouse_over = true;
}
else{mouse_over = false;}
}
if ( mouse_over == true &amp;&amp; keyboard_check(vk_shift) == false )
{
    str_display = keyboard_get_str(obj_player.key_walk_main);
}
if ( mouse_over == true &amp;&amp; keyboard_check(vk_shift) == true )
{
    str_display = "Right Mouse Button";
}

if ( mouse_over == false )
{
    str_display = "";
}

if ( point_dist_test &gt; 70 &amp;&amp; point_dist_test &lt; 96 )
{
if ( mouse_over == true &amp;&amp; keyboard_check(vk_shift) == true &amp;&amp; mouse_check_button_pressed(mb_right) == true )
{
var inst = instance_create(x,y,obj_item_dropped);
inst.item_id = 5;
inst.item_stack = 1;
instance_destroy();
}
}

}
else{mouse_over=false;str_display="";}
}


}
else{mouse_over=false;str_display="";}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Deconstruct Popup
if ( global.render_gui_page == "none" )
{
if ( str_display != "" )
{
draw_set_color(c_white);
draw_set_font(font_gulim_12);
draw_set_halign(fa_center);
draw_set_valign(fa_middle);
draw_text_outline(str_display,x,y,c_white,c_black);
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ( active == true )
{
if ( mouse_over == false )
{
draw_set_color(c_white);
}
else
{
draw_set_color(c_dkgray);
}
w3d_draw_floor(tex,x,y,0,112,112);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>50,162</point>
    <point>82,82</point>
  </PhysicsShapePoints>
</object>
