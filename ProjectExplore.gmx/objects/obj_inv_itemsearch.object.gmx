<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_inv_itemsearch</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5000002</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize
image_speed = 0;
item_search = "";
global.update_list = false;
crafting_list = ds_list_create();
char_delete_wait = 3;
cursor_blink = 45;
cursor_time = 0;
search_disable = false;
select = false;
item_page = 1;
arrow_1 = 0;
arrow_2 = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Clear Memory
ds_list_destroy(crafting_list);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Item Page Scroll
// height 22, width 30
if ( !search_disable ){
if ( mouse_check_area(x+100-15,y+48-11,x+100+15,y+48+11) )
{arrow_1=0;}else{arrow_1=1;}
if ( arrow_1 == 0 ){if(mouse_check_button_pressed(mb_left)){item_page--;global.update_list=true;}}
if ( mouse_check_area(x+172-15,y+48-11,x+172+15,y+48+11) )
{arrow_2=0;}else{arrow_2=1;}
if ( arrow_2 == 0 ){if(mouse_check_button_pressed(mb_left)){item_page++;global.update_list=true;}}

var list_num = ds_list_size(crafting_list);
if ( list_num == 0 ){list_num=1}else{if ( list_num &gt; 10 ){list_num = ceil(list_num/10);}else{list_num=1;}}
if ( item_page &lt; 1 ){item_page=1}if ( item_page &gt; list_num ){item_page=list_num}}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Check If Mouse Is Over Button
if ( !search_disable ){
image_index = 0;

if ( mouse_check_area(x-192,y-24,x+192,y+24) == true )
{
image_index = 1;
}}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Check To See If Inventory Is Open
if ( global.render_gui_page != "inventory" )
{instance_destroy();}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Mouse Click &amp;&amp; Keyboard Input
if ( !search_disable ){
if ( mouse_check_button_pressed(mb_left) )
{
if ( mouse_check_area(x-192,y-24,x+192,y+24) )
{select = true;} // Select the text field
else
{select = false;} // Deselect the text field
}

if ( select == true ){
if ( keyboard_check_pressed(vk_backspace) ) // Check if backspace is pressed once
{item_search = string_delete(item_search,string_length(item_search),1);global.update_list=true;char_delete_wait=-20;}else{
if ( keyboard_check(vk_backspace) &amp;&amp; char_delete_wait == 3 ) // Check if backspace is pressed once
{item_search = string_delete(item_search,string_length(item_search),1);global.update_list=true;char_delete_wait=0;}}


if ( keyboard_check_pressed(vk_anykey) &amp;&amp; string_length(item_search) &lt; 32 &amp;&amp; keyboard_lastchar != "#" &amp;&amp; !keyboard_check_pressed(vk_backspace) &amp;&amp; !keyboard_check_pressed(vk_shift) &amp;&amp; !keyboard_check_pressed(vk_tab) ) // Get Keyboard Input
{item_search = item_search+string(keyboard_lastchar);global.update_list=true;}
if ( string_length(item_search) &gt; 32 ){item_search = string_delete(item_search,string_length(item_search),1);} // Make sure the user doesn't type more than 32 characters
}

// Update backspace wait time
if ( char_delete_wait != 3 ){char_delete_wait++;}}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Update Crafting List
if ( !search_disable ){
if ( global.update_list ){
global.update_list = false;
with(obj_inv_craftlist){instance_destroy()}
crafting_list = db_crafting_find_matches(item_search);
var i = 0;var r = 48;var inst = 0;var num = 0;
for(i=(10*item_page)-10;i&lt;(10*item_page)-1 &amp;&amp; i&lt;ds_list_size(crafting_list);i++)
{
inst = instance_create(48,y+r,obj_inv_craftlist);
num=db_item_get_name(crafting_list[|i]);
if ( num != undefined ){
inst.item_sprite=global.item_data[#num,2];
inst.item_id = num;
inst.item_name = crafting_list[|i];}
else{
show_message(string(crafting_list[|i])+" does not match any item names!");
file_log_write(string(crafting_list[|i])+" does not match any item names!");
}
r+=48;
}}}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Render Inventory Slot

if ( !search_disable ){
surface_set_target(application_surface);
if ( global.render_gui_page == "inventory" ){
    draw_set_color(c_white);
    draw_set_alpha(1);
    draw_self(); // Draw the text field sprite
    draw_set_font(font_gulim_18);draw_set_halign(fa_center);draw_set_valign(fa_middle); // Set up our font
    
    draw_sprite(spr_inv_pagescroll_back,0,x+136,y+48);
    draw_sprite_ext(spr_item_view_arrow,arrow_1,x+100,y+48,-1.5,1.5,0,c_white,1);
    draw_sprite_ext(spr_item_view_arrow,arrow_2,x+172,y+48,1.5,1.5,0,c_white,1);
    var scale2 = 1;var list_num = ds_list_size(crafting_list);
    if ( list_num == 0 ){list_num=1}else{if ( list_num &gt; 10 ){list_num = ceil(list_num/10);}else{list_num=1;}}
    var scale1 = 1;
    while((string_width(item_search)*scale1)&gt;352){scale1-=0.025;}
    draw_text_transformed(x,y,string(item_search),scale1,scale1,0);
    while((string_width(string(item_page)+"/"+string(list_num))*scale2)&gt;48){scale2-=0.025;}
    draw_text_transformed(x+136,y+48,string(item_page)+"/"+string(list_num),scale2,scale2,0);
    cursor_time++;
    if ( cursor_time &gt; cursor_blink-(cursor_blink/2) &amp;&amp; cursor_time &lt;= cursor_blink ){draw_set_alpha(1);}else{draw_set_alpha(0);}
    if ( cursor_time &gt;= cursor_blink ){cursor_time=0;}
    if( select == true ){
    if ( scale1 == 1 ){draw_rectangle(x+(string_width(string(item_search))/2)+3,y-(16*scale1),x+(string_width(string(item_search))/2)+5,y+(16*scale1),false);}
    else{draw_rectangle(x+179-(1*scale1),y-(16*scale1),x+179+(1*scale1),y+(16*scale1),false);}}
    draw_set_alpha(1);
}surface_reset_target();}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Render Other Slots

// This just renders the slot and the item in it
if ( global.render_gui_page == "inventory" ){
surface_set_target(application_surface);
with(obj_inv_slot){draw_set_color(c_white);draw_set_halign(fa_left);draw_set_valign(fa_middle);draw_set_font(font_gulim_12);
draw_sprite(sprite_index,image_index,x,y);}
with(obj_inv_slot){
if ( item_sprite != 0 &amp;&amp; item_id &gt; 0 )
{draw_external_sprite(item_sprite,0,x,y);}}
with(obj_inv_slot){
if ( item_stack &gt; 1 )
{draw_text_outline(string(item_stack),x-15,y-13,c_white,c_black);}}

// Draw mouse over text
with(obj_inv_slot){
if ( draw_name == true ){
var m_x = mouse_x-view_xview[0];var m_y = mouse_y-view_yview[0];
draw_set_halign(fa_center);draw_set_valign(fa_middle);draw_set_font(font_gulim_12);
var item_name = string(global.item_data[#item_id,0]);
draw_set_color(c_black);draw_set_alpha(0.75);
draw_rectangle(m_x-(string_width(item_name)/2)-4,m_y-(string_height(item_name)/2)-7,(string_width(item_name)/2)+m_x+7,m_y+(string_height(item_name)/2)-5,false);
draw_set_color(c_white);draw_set_alpha(1);
draw_text(m_x,m_y-6,item_name);}}

// This will render the cooking effect on the slot if it is the child of a cooking object
with(obj_inv_slot){
if ( storage_id.object_index == obj_archetype_cooking ){
var list = 0;
if ( storage_id.c_inv[#grid_x,grid_y] &gt; 0 ){list = convert_string_to_list(global.item_data[#storage_id.c_inv[#grid_x,grid_y],9],",");
if ( list[|1] != "0" ){draw_set_alpha(0.2);draw_set_color(c_yellow);
draw_rectangle(x-16,y+16,x+16,y+16-((storage_id.cooking_grid[#grid_x,grid_y]/real(list[|0]))*33),false);
draw_set_color(c_white);draw_set_alpha(1);ds_list_destroy(list);}}}}
surface_reset_target();
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Render Craftlist
if ( !search_disable ){
surface_set_target(application_surface);
if ( instance_exists(obj_inv_craftlist) ){
if ( global.render_gui_page == "inventory" ){
draw_set_font(font_gulim_12);draw_set_halign(fa_left);draw_set_valign(fa_middle);draw_set_alpha(1);draw_set_color(c_white);
with(obj_inv_craftlist){draw_sprite(sprite_index,image_index,x,y);}
with(obj_inv_craftlist){draw_external_sprite(item_sprite,0,x,y);}
draw_set_halign(fa_center);
with(obj_inv_craftlist){
var grid_width = ds_grid_width(req_grid);img_ind1 = 0;img_ind2 = 0;img_ind3 = 0;img_ind4 = 0;var x_off = 0;
if ( mouse_check_area(x+48-20,y-20,x+48+20,y+20) ){img_ind1=1;} // Mouse check
draw_sprite(spr_crafting_req,img_ind1,x+48,y);
if ( grid_width &gt; 1 ){
if ( mouse_check_area(x+96-20,y-20,x+96+20,y+20) ){img_ind2=1;} // Mouse check
draw_sprite(spr_crafting_req,img_ind2,x+96,y);
if ( grid_width &gt; 2 ){
if ( mouse_check_area(x+144-20,y-20,x+144+20,y+20) ){img_ind3=1;} // Mouse check
draw_sprite(spr_crafting_req,img_ind3,x+144,y);
if ( grid_width &gt; 3 ){
if ( mouse_check_area(x+192-20,y-20,x+192+20,y+20) ){img_ind4=1;} // Mouse check
draw_sprite(spr_crafting_req,img_ind4,x+192,y);}}}}

with(obj_inv_craftlist){var grid_width = ds_grid_width(req_grid);
draw_external_sprite(sprite_cache[|0],0,x+48,y);
if ( grid_width &gt; 1 ){
draw_external_sprite(sprite_cache[|1],0,x+96,y);
if ( grid_width &gt; 2 ){
draw_external_sprite(sprite_cache[|2],0,x+144,y);
if ( grid_width &gt; 3 ){
draw_external_sprite(sprite_cache[|3],0,x+192,y);}}}}

with(obj_inv_craftlist){var grid_width = ds_grid_width(req_grid);
draw_text_outline(req_grid[#0,1],x+48-16,y-16,c_white,c_black);
if ( grid_width &gt; 1 ){
draw_text_outline(req_grid[#1,1],x+96-16,y-16,c_white,c_black);
if ( grid_width &gt; 2 ){
draw_text_outline(req_grid[#2,1],x+144-16,y-16,c_white,c_black);
if ( grid_width &gt; 3 ){
draw_text_outline(req_grid[#3,1],x+192-16,y-16,c_white,c_black);}}}}

with(obj_inv_craftlist){// Tooltip drawing
item_name = global.item_data[#item_id,0];
if ( image_index == 1 ){
draw_set_color(c_black);draw_set_alpha(0.9);
if ( x-(string_width(item_name)/2) &lt; 0 ){x_off = point_distance(0,y,x-(string_width(item_name)/2),y);}
draw_rectangle(x+x_off-(string_width(item_name)/2),y-(string_height(item_name)/2),x+x_off+(string_width(item_name)/2),y+(string_height(item_name)/2),false);
draw_set_alpha(1);draw_set_color(c_white);draw_text(x+x_off,y,item_name);}
if ( img_ind1 == 1 ){ // Draw the item name if the mouse is over the button
draw_set_color(c_black);draw_set_alpha(0.9);x_off = 0;
if ( x-(string_width(req_grid[#0,0])/2) &lt; 0 ){x_off = point_distance(0,y,x-(string_width(req_grid[#0,0])/2),y);}
draw_rectangle((x+48+x_off)-(string_width(req_grid[#0,0])/2),y-(string_height(req_grid[#0,0])/2),(x+48+x_off)+(string_width(req_grid[#0,0])/2),y+(string_height(req_grid[#0,0])/2),false);
draw_set_alpha(1);draw_set_color(c_white);draw_text(x+48,y,req_grid[#0,0]);}
if ( img_ind2 == 1 ){ // Draw the item name if the mouse is over the button
draw_set_color(c_black);draw_set_alpha(0.9);x_off = 0;
if ( x-(string_width(req_grid[#1,0])/2) &lt; 0 ){x_off = point_distance(0,y,x-(string_width(req_grid[#1,0])/2),y);}
draw_rectangle((x+96+x_off)-(string_width(req_grid[#1,0])/2),y-(string_height(req_grid[#1,0])/2),(x+96+x_off)+(string_width(req_grid[#1,0])/2),y+(string_height(req_grid[#1,0])/2),false);
draw_set_alpha(1);draw_set_color(c_white);draw_text(x+96,y,req_grid[#1,0]);}
if ( img_ind3 == 1 ){ // Draw the item name if the mouse is over the button
draw_set_color(c_black);draw_set_alpha(0.9);x_off = 0;
if ( x-(string_width(req_grid[#2,0])/2) &lt; 0 ){x_off = point_distance(0,y,x-(string_width(req_grid[#2,0])/2),y);}
draw_rectangle((x+144+x_off)-(string_width(req_grid[#2,0])/2),y-(string_height(req_grid[#0,0])/2),(x+144+x_off)+(string_width(req_grid[#2,0])/2),y+(string_height(req_grid[#2,0])/2),false);
draw_set_alpha(1);draw_set_color(c_white);draw_text(x+144,y,req_grid[#2,0]);}
if ( img_ind4 == 1 ){ // Draw the item name if the mouse is over the button
draw_set_color(c_black);draw_set_alpha(0.9);x_off = 0;
if ( x-(string_width(req_grid[#3,0])/2) &lt; 0 ){x_off = point_distance(0,y,x-(string_width(req_grid[#3,0])/2),y);}
draw_rectangle((x+192+x_off)-(string_width(req_grid[#3,0])/2),y-(string_height(req_grid[#3,0])/2),(x+192+x_off)+(string_width(req_grid[#3,0])/2),y+(string_height(req_grid[#3,0])/2),false);
draw_set_alpha(1);draw_set_color(c_white);draw_text(x+192,y,req_grid[#3,0]);}}
}}
surface_reset_target();}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Render Item Moving
if ( global.v_item_moving == true ){
surface_set_target(application_surface);
var m_x = mouse_x-view_xview[0];
var m_y = mouse_y-view_yview[0];
if(global.v_slot_inst!=0){
if(global.v_slot_inst.item_id!=0){
if ( global.item_data[#global.v_slot_inst.item_id,4] != 4 ){
var i_sprite = global.item_data[#global.v_slot_inst.item_id,2];}
else{
var i_sprite = ds_list_find_value(global.item_data[#global.v_slot_inst.item_id,2],0);}
draw_external_sprite_ext(i_sprite,0,m_x,m_y,1+global.tablet_scaling,1+global.tablet_scaling,0,c_white,0.5);}}
surface_reset_target();}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Just to disable the draw event
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>17,17</point>
    <point>18,18</point>
  </PhysicsShapePoints>
</object>
