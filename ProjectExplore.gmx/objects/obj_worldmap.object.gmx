<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-9999888</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//ds_grid_copy(global.c_worldmap,global.world_tiles);

color_index = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Controls
if ( keyboard_check_pressed(ord("1")) )
{color_index = c_black;}
if ( keyboard_check_pressed(ord("2")) )
{color_index = c_white;}
if ( keyboard_check_pressed(ord("3")) )
{color_index = c_blue;}
if ( keyboard_check_pressed(ord("4")) )
{color_index = c_red;}
if ( keyboard_check_pressed(ord("5")) )
{color_index = c_green;}
 
if ( keyboard_check(vk_left) )
{
if ( view_xview[0] &gt; 0 )
{view_xview[0] -= 8;}else{view_xview[0]=0;}
}
if ( keyboard_check(vk_right) )
{
if ( view_xview[0]+view_wview[0] &lt; room_width )
{view_xview[0] += 8;}else{view_xview[0]=room_width-view_wview[0];}
}
if ( keyboard_check(vk_up) )
{
if ( view_yview[0] &gt; 0 )
{view_yview[0] -= 8;}else{view_yview[0]=0;}
}
if ( keyboard_check(vk_down) )
{
if ( view_yview[0]+view_hview[0] &lt; room_height )
{view_yview[0] += 8;}else{view_yview[0]=room_height-view_hview[0];}
}

if ( global.map_draw_grid[# round((mouse_x-16)/64), round((mouse_y-16)/64)] != color_index )
{
if ( mouse_check_button(mb_left) )
{
    global.map_draw_grid[# round((mouse_x-16)/64), round((mouse_y-16)/64)] = color_index;
    instance_create(round((mouse_x)/64),round((mouse_y)/64),obj_map_tile_pop);
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw World Map
draw_set_color(c_black);
draw_set_alpha(1);
draw_rectangle(round((mouse_x-32)/64)*64-32,round((mouse_y-32)/64)*64-32,round((mouse_x-32)/64)*64+64,round((mouse_y-32)/64)*64+64,true);
draw_set_alpha(0.75);
draw_rectangle(view_xview[0],view_yview[0],view_xview[0]+view_wview[0],view_yview[0]+view_hview[0],false);
var ds_size_w = (view_xview[0]+view_wview[0])/64;
var ds_size_h = (view_yview[0]+view_hview[0])/64;
for(i=round(view_xview[0]/64);i&lt;ds_size_w;i++)
{
    for(r=round(view_yview[0]/64);r&lt;ds_size_h;r++)
    {
    if ( global.map_draw_grid[# i, r] != c_black )
    {
    draw_sprite_ext(spr_map_tile,0,i*64,r*64,1,1,0,global.map_draw_grid[# i, r],0.75);
    }
    }
}
draw_set_color(c_aqua);
draw_circle((view_xview[0]/64)*64+(obj_player.x/64)+view_wview[0]/2,(view_yview[0]/64)*64+(obj_player.y/64)+view_hview[0]/2,8,false);

draw_set_alpha(1);
draw_set_color(c_white);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
